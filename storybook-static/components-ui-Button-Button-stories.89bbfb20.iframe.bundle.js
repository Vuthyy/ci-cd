"use strict";(self.webpackChunkdata_fetching=self.webpackChunkdata_fetching||[]).push([[4],{"./components/ui/Button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Dark:()=>Dark,Default:()=>Default,Disabled:()=>Disabled,Ghost:()=>Ghost,Icon:()=>Icon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),dist=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),bundle_cjs=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-cjs.js");function cov_2dbfc0kwe1(){var path="C:\\Users\\user\\Desktop\\SabaiCode\\NestJS-SabaiCode\\data-fetching\\components\\ui\\Button\\Button.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"d9dd848e4c06252ddff191bc33521f5dcf2e11c0"===coverage[path].hash||(coverage[path]={path:"C:\\Users\\user\\Desktop\\SabaiCode\\NestJS-SabaiCode\\data-fetching\\components\\ui\\Button\\Button.tsx",statementMap:{0:{start:{line:5,column:28},end:{line:43,column:2}},1:{start:{line:46,column:4},end:{line:52,column:7}},2:{start:{line:54,column:0},end:{line:74,column:2}}},fnMap:{0:{name:"Button",decl:{start:{line:45,column:24},end:{line:45,column:30}},loc:{start:{line:45,column:95},end:{line:53,column:1}},line:45}},branchMap:{0:{loc:{start:{line:45,column:33},end:{line:45,column:52}},type:"default-arg",locations:[{start:{line:45,column:43},end:{line:45,column:52}}],line:45},1:{loc:{start:{line:45,column:54},end:{line:45,column:70}},type:"default-arg",locations:[{start:{line:45,column:61},end:{line:45,column:70}}],line:45}},s:{0:0,1:0,2:0},f:{0:0},b:{0:[0],1:[0]},inputSourceMap:{version:3,sources:["C:/Users/user/Desktop/SabaiCode/NestJS-SabaiCode/data-fetching/components/ui/Button/Button.tsx"],sourcesContent:['import { cva, VariantProps } from "class-variance-authority";\r\nimport { ComponentProps } from "react";\r\nimport { twMerge } from "tailwind-merge";\r\n\r\n// Define button styles using `cva` for variants\r\nexport const buttonStyles = cva(["transition-colors"], {\r\n  variants: {\r\n    variant: {\r\n      default: ["bg-secondary", "hover:bg-secondary-hover"],\r\n      ghost: ["hover:bg-gray-100"],\r\n      dark: [\r\n        "bg-secondary-dark",\r\n        "hover:bg-secondary-dark-hover",\r\n        "text-secondary",\r\n      ],\r\n    },\r\n    size: {\r\n      default: ["rounded", "p-2"],\r\n      icon: [\r\n        "rounded-full",\r\n        "w-10",\r\n        "h-10",\r\n        "flex",\r\n        "items-center",\r\n        "justify-center",\r\n        "p-2.5",\r\n      ],\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: "default",\r\n    size: "default",\r\n  },\r\n});\r\n\r\n// Define the ButtonProps type including variant and size variants from `buttonStyles`\r\nexport type ButtonProps = VariantProps<typeof buttonStyles> &\r\n  ComponentProps<"button">;\r\n\r\n// Define the Button component with proper TypeScript types and merging of class names\r\nexport default function Button({\r\n  variant = "default",\r\n  size = "default",\r\n  className,\r\n  ...props\r\n}: ButtonProps) {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={twMerge(buttonStyles({ variant, size }), className)}\r\n    />\r\n  );\r\n}\r\n'],names:["cva","twMerge","buttonStyles","variants","variant","default","ghost","dark","size","icon","defaultVariants","Button","className","props","button"],mappings:";AAAA,SAASA,GAAG,QAAsB,2BAA2B;AAE7D,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,gDAAgD;AAChD,OAAO,MAAMC,eAAeF,IAAI;IAAC;CAAoB,EAAE;IACrDG,UAAU;QACRC,SAAS;YACPC,SAAS;gBAAC;gBAAgB;aAA2B;YACrDC,OAAO;gBAAC;aAAoB;YAC5BC,MAAM;gBACJ;gBACA;gBACA;aACD;QACH;QACAC,MAAM;YACJH,SAAS;gBAAC;gBAAW;aAAM;YAC3BI,MAAM;gBACJ;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;IACF;IACAC,iBAAiB;QACfN,SAAS;QACTI,MAAM;IACR;AACF,GAAG;AAMH,sFAAsF;AACtF,eAAe,SAASG,OAAO,EAC7BP,UAAU,SAAS,EACnBI,OAAO,SAAS,EAChBI,SAAS,EACT,GAAGC,OACS;IACZ,qBACE,KAACC;QACE,GAAGD,KAAK;QACTD,WAAWX,QAAQC,aAAa;YAAEE;YAASI;QAAK,IAAII;;AAG1D"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d9dd848e4c06252ddff191bc33521f5dcf2e11c0"});var actualCoverage=coverage[path];return cov_2dbfc0kwe1=function(){return actualCoverage},actualCoverage}cov_2dbfc0kwe1();const buttonStyles=(cov_2dbfc0kwe1().s[0]++,(0,dist.F)(["transition-colors"],{variants:{variant:{default:["bg-secondary","hover:bg-secondary-hover"],ghost:["hover:bg-gray-100"],dark:["bg-secondary-dark","hover:bg-secondary-dark-hover","text-secondary"]},size:{default:["rounded","p-2"],icon:["rounded-full","w-10","h-10","flex","items-center","justify-center","p-2.5"]}},defaultVariants:{variant:"default",size:"default"}}));function Button({variant=(cov_2dbfc0kwe1().b[0][0]++,"default"),size=(cov_2dbfc0kwe1().b[1][0]++,"default"),className,...props}){return cov_2dbfc0kwe1().f[0]++,cov_2dbfc0kwe1().s[1]++,(0,jsx_runtime.jsx)("button",{...props,className:(0,bundle_cjs.twMerge)(buttonStyles({variant,size}),className)})}cov_2dbfc0kwe1().s[2]++,Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{variant:{defaultValue:{value:'"default"',computed:!1},required:!1},size:{defaultValue:{value:'"default"',computed:!1},required:!1}}};const Button_stories={title:"Example/Button",component:Button,parameters:{layout:"centered"},argTypes:{variant:{control:"radio",options:["default","ghost","dark"]},size:{control:"select",options:["default","icon"]},disabled:{control:"boolean"},onClick:{action:"clicked"}}},Default={args:{variant:"default",size:"default",children:"Default Button"}},Ghost={args:{variant:"ghost",size:"default",children:"Ghost Button"}},Dark={args:{variant:"dark",size:"default",children:"Dark Button"}},Icon={args:{variant:"default",size:"icon",children:(0,jsx_runtime.jsx)("span",{children:"Icon"})}},Disabled={args:{variant:"default",size:"default",children:"Disabled Button",disabled:!0}},__namedExportsOrder=["Default","Ghost","Dark","Icon","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "default",\n    children: "Default Button"\n  }\n}',...Default.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "ghost",\n    size: "default",\n    children: "Ghost Button"\n  }\n}',...Ghost.parameters?.docs?.source}}},Dark.parameters={...Dark.parameters,docs:{...Dark.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "dark",\n    size: "default",\n    children: "Dark Button"\n  }\n}',...Dark.parameters?.docs?.source}}},Icon.parameters={...Icon.parameters,docs:{...Icon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "icon",\n    children: <span>Icon</span> // Replace with actual icon if needed\n  }\n}',...Icon.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "default",\n    children: "Disabled Button",\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}}}}]);